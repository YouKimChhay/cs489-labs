1. What is Spring?
Spring is an open-source framework for developing enterprise Java applications. Spring Framework simplifies the complex development process by having dependency injection (DI), aspect-oriented programming (AOP), transaction management, etc.


2. What is Spring Boot?
Spring Boot is an open-source tool, an extension of the Spring Framework, that simplifies the configuration and deployment of Spring-based applications by providing convention-over-configuration setup and embedded servers.


3. What is the relation between Spring platform and Spring Boot?
Spring Boot is a part of the Spring platform, providing a rapid application development framework and simplifying the process of building, deploying, and managing Spring-based applications.


4. What is the relation between Spring platform and Spring framework?
Spring framework is the foundational framework for building Java application (refer to 1.), whereas Spring platform extends beyond just the core framework and includes other projects such as Spring Boot, Spring Data, Spring Security, etc.


5. What is Dependency Injection and how is it done in the Spring platform/framework?
Dependency Injection (DI) is the process of injecting instances to the class variables/dependencies. Traditionally, when a class depends on another class, it directly creates instances of those dependencies within itself. Now, framework has the responsibility of providing the dependencies (DI).


6. What is Inversion of Control (IoC) and how is it related to Spring?
Inversion of Control (IoC) means the framework takes control of object instantiation, lifecycle, and dependency management instead of the application code. IoC promotes loose coupling between components and improves modularity, flexibility, and testability. Spring facilitates the implementation of the IoC.