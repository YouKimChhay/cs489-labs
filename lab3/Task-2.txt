1. What is Spring?
Spring is an open-source framework for developing enterprise Java applications.
It simplifies the complex development process by offering dependency injection (DI),
aspect-oriented programming (AOP), transaction management, and more.


2. What is Spring Boot?
Spring Boot is an open-source tool, an extension of the Spring Framework,
that simplifies the configuration and deployment of Spring-based applications by
providing convention-over-configuration setup and embedded servers.


3. What is the relation between Spring platform and Spring Boot?
Spring Boot is part of the Spring platform. It provides a rapid application development framework
and simplifies the process of building, deploying, and managing Spring-based applications.


4. What is the relation between the Spring platform and the Spring framework?
The Spring framework is the foundational framework for building Java applications (refer to 1.),
whereas the Spring platform extends beyond the core framework and includes other projects
such as Spring Boot, Spring Data, Spring Security, and more.


5. What is Dependency Injection, and how is it done in the Spring platform/framework?
Dependency Injection (DI) is the process of injecting instances into class variables/dependencies.
Traditionally, when a class depends on other classes or objects, it directly creates instances of
those dependencies. Now, the framework is responsible for providing the dependencies (DI).


6. What is Inversion of Control (IoC), and how is it related to Spring?
Inversion of Control (IoC) means the framework takes control of object instantiation, lifecycle,
and dependency management instead of the application code. IoC promotes loose coupling between components
and improves modularity, flexibility, and testability. Spring facilitates the implementation of the IoC.
